{% extends 'layouts/main.twig' %}

{% block title %}Настройки AI Search — Shoper{% endblock %}

{% block content %}
<div class="row">
    <div class="col-md-12 mb-4">
        <h2>Настройки AI Search</h2>
        <p class="text-muted">Настройте параметры работы интеллектуального поиска для вашего магазина</p>
        <hr>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Основные настройки</h5>
            </div>
            <div class="card-body">
                <form action="{{ path('admin_settings_save') }}" method="POST" data-ajax="true" id="settingsForm">
                    <!-- CSRF токен -->
                    <input type="hidden" name="csrf_token" value="{{ csrf_token }}">
                    
                    <div class="mb-3">
                        <label for="api_key" class="form-label">API ключ</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="api_key" name="api_key" value="{{ settings.api_key|default('') }}" required>
                            <button class="btn btn-outline-secondary" type="button" id="toggleApiKey">
                                <i class="fa fa-eye"></i>
                            </button>
                        </div>
                        <small class="form-text text-muted">Ключ для доступа к API искусственного интеллекта</small>
                    </div>
                    
                    <div class="mb-3">
                        <label for="api_endpoint" class="form-label">Endpoint API</label>
                        <input type="url" class="form-control" id="api_endpoint" name="api_endpoint" value="{{ settings.api_endpoint|default('https://api.openai.com/v1') }}">
                        <small class="form-text text-muted">URL-адрес API сервиса (оставьте по умолчанию, если не уверены)</small>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="search_enabled" name="search_enabled" {% if settings.search_enabled|default(false) %}checked{% endif %}>
                            <label class="form-check-label" for="search_enabled">Включить AI-поиск на сайте</label>
                        </div>
                        <small class="form-text text-muted">Активирует интеллектуальный поиск в магазине</small>
                    </div>
                    
                    <div class="mb-3">
                        <label for="result_limit" class="form-label">Лимит результатов поиска</label>
                        <input type="number" class="form-control" id="result_limit" name="result_limit" min="1" max="100" value="{{ settings.result_limit|default(10) }}">
                        <small class="form-text text-muted">Максимальное количество результатов в выдаче (от 1 до 100)</small>
                    </div>
                    
                    <div class="mb-3">
                        <label for="model_name" class="form-label">Модель AI</label>
                        <select class="form-select" id="model_name" name="model_name">
                            <option value="gpt-4" {% if settings.model_name|default('gpt-4') == 'gpt-4' %}selected{% endif %}>GPT-4 (рекомендуется)</option>
                            <option value="gpt-3.5-turbo" {% if settings.model_name|default('') == 'gpt-3.5-turbo' %}selected{% endif %}>GPT-3.5 Turbo (быстрее)</option>
                        </select>
                        <small class="form-text text-muted">Выберите модель искусственного интеллекта</small>
                    </div>
                    
                    <div class="mb-3">
                        <label for="temperature" class="form-label">Температура (0.0-1.0): <span id="temperatureValue">{{ settings.temperature|default(0.7) }}</span></label>
                        <input type="range" class="form-range" id="temperature" name="temperature" min="0" max="1" step="0.1" value="{{ settings.temperature|default(0.7) }}">
                        <small class="form-text text-muted">Контролирует случайность в ответах (0 - точные ответы, 1 - творческие)</small>
                    </div>
                    
                    <hr>
                    <h5 class="mb-3">Настройки интеграции с магазином</h5>
                    
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="replace_default_search" name="replace_default_search" {% if settings.replace_default_search|default(true) %}checked{% endif %}>
                            <label class="form-check-label" for="replace_default_search">Заменить стандартный поиск</label>
                        </div>
                        <small class="form-text text-muted">При включении AI-поиск заменит стандартный поиск магазина</small>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="include_descriptions" name="include_descriptions" {% if settings.include_descriptions|default(true) %}checked{% endif %}>
                            <label class="form-check-label" for="include_descriptions">Учитывать описания товаров</label>
                        </div>
                        <small class="form-text text-muted">Включает полные описания товаров в обработку запросов</small>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="include_attributes" name="include_attributes" {% if settings.include_attributes|default(true) %}checked{% endif %}>
                            <label class="form-check-label" for="include_attributes">Учитывать атрибуты товаров</label>
                        </div>
                        <small class="form-text text-muted">Включает характеристики товаров в обработку запросов</small>
                    </div>
                    
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="submit" class="btn btn-primary">
                            <i class="fa fa-save me-1"></i> Сохранить настройки
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div class="col-lg-4">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Статус AI-поиска</h5>
            </div>
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <div class="me-3">
                        {% if settings.search_enabled|default(false) %}
                            <span class="badge bg-success p-2"><i class="fa fa-check-circle me-1"></i> Активно</span>
                        {% else %}
                            <span class="badge bg-danger p-2"><i class="fa fa-times-circle me-1"></i> Отключено</span>
                        {% endif %}
                    </div>
                    <div>
                        <strong>Статус AI-поиска</strong><br>
                        <small class="text-muted">{% if settings.search_enabled|default(false) %}Поиск работает на сайте{% else %}Поиск отключен{% endif %}</small>
                    </div>
                </div>
                
                <div class="d-flex align-items-center mb-3">
                    <div class="me-3">
                        <span class="badge bg-primary p-2"><i class="fa fa-key me-1"></i></span>
                    </div>
                    <div>
                        <strong>API Ключ</strong><br>
                        <small class="text-muted">{% if settings.api_key|default('') %}Настроен{% else %}Не настроен{% endif %}</small>
                    </div>
                </div>
                
                <div class="d-flex align-items-center">
                    <div class="me-3">
                        <span class="badge bg-secondary p-2"><i class="fa fa-search me-1"></i></span>
                    </div>
                    <div>
                        <strong>Лимит результатов</strong><br>
                        <small class="text-muted">{{ settings.result_limit|default(10) }} товаров</small>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Резервное копирование</h5>
            </div>
            <div class="card-body">
                <form action="{{ path('admin_backup_settings') }}" method="POST" data-ajax="true" class="mb-3">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token }}">
                    <p>Создайте резервную копию текущих настроек приложения.</p>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-outline-primary">
                            <i class="fa fa-download me-1"></i> Создать резервную копию
                        </button>
                    </div>
                </form>
                
                <hr>
                
                <form action="{{ path('admin_restore_settings') }}" method="POST" data-ajax="true">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token }}">
                    <p>Восстановить настройки из резервной копии:</p>
                    
                    <div class="mb-3">
                        <select class="form-select" name="filename" id="backup_file" required>
                            <option value="">-- Выберите файл резервной копии --</option>
                            {% for backup in backups|default([]) %}
                                <option value="{{ backup.filename }}">{{ backup.date }} ({{ backup.size }})</option>
                            {% endfor %}
                        </select>
                    </div>
                    
                    <div class="d-grid">
                        <button type="submit" class="btn btn-outline-warning" data-confirm="Вы уверены, что хотите восстановить настройки из резервной копии? Текущие настройки будут перезаписаны.">
                            <i class="fa fa-upload me-1"></i> Восстановить
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Переключение видимости API ключа
        const apiKeyInput = document.getElementById('api_key');
        const toggleButton = document.getElementById('toggleApiKey');
        
        toggleButton.addEventListener('click', function() {
            const type = apiKeyInput.getAttribute('type') === 'password' ? 'text' : 'password';
            apiKeyInput.setAttribute('type', type);
            toggleButton.innerHTML = type === 'password' ? '<i class="fa fa-eye"></i>' : '<i class="fa fa-eye-slash"></i>';
        });
        
        // Обновление значения температуры в реальном времени
        const temperatureInput = document.getElementById('temperature');
        const temperatureValue = document.getElementById('temperatureValue');
        
        temperatureInput.addEventListener('input', function() {
            temperatureValue.textContent = this.value;
        });
        
        // Проверка статуса API
        const testApiButton = document.getElementById('testApiButton');
        if (testApiButton) {
            testApiButton.addEventListener('click', function() {
                const apiKey = document.getElementById('api_key').value;
                const endpoint = document.getElementById('api_endpoint').value;
                
                if (!apiKey) {
                    showAlert('Введите API ключ для проверки', 'warning');
                    return;
                }
                
                toggleLoading(true);
                
                fetch('{{ path("admin_test_api") }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': '{{ csrf_token }}'
                    },
                    body: JSON.stringify({
                        api_key: apiKey,
                        api_endpoint: endpoint
                    })
                })
                .then(response => response.json())
                .then(data => {
                    toggleLoading(false);
                    
                    if (data.success) {
                        showAlert('API подключение работает!', 'success');
                    } else {
                        showAlert('Ошибка API: ' + (data.error || 'Неизвестная ошибка'), 'danger');
                    }
                })
                .catch(error => {
                    toggleLoading(false);
                    showAlert('Ошибка сервера: ' + error.message, 'danger');
                });
            });
        }
    });
</script>
{% endblock %}

